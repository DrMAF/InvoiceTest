@using Core.ViewModels.Invoices
@model InvoiceVM

@{
    ViewData["Title"] = "Create Invoice";
}
<h1>@ViewData["Title"]</h1>

<p>Use this page to create invoice.</p>

<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="CreateInvoice">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Date" class="control-label"></label>
                <input asp-for="Date" class="form-control" />
                <span asp-validation-for="Date" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="StoreId" class="control-label"></label>
                <select class="form-control" id="ddStore"
                        asp-items="@(new SelectList(ViewBag.StoresList,"Value", "Text"))">
                </select>
                <span asp-validation-for="StoreId" class="text-danger"></span>
            </div>

            <table id="tblItems" class="table table-striped table-bordered bulk_action" cellpadding="0" cellspacing="0">
                <thead>
                    <tr>
                        <th style="width:150px">Produc</th>
                        <th style="width:150px">Unit</th>
                        <th style="width:150px">Price</th>
                        <th style="width:150px">Quantity</th>
                        <th style="width:150px">Total</th>
                        <th style="width:150px">Discount</th>
                        <th style="width:150px">Total</th>

                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model != null && Model.Items != null && Model.Items.Any())
                    {
                        @foreach (InvoiceItemVM item in Model?.Items)
                        {
                            <tr>
                                <td>@item.ProductName</td>
                                <td>@item.UnitName</td>
                                <td>@item.Price</td>
                                <td>@item.Quantity</td>
                                <td>@item.Total</td>
                                <td>@item.Discount</td>
                                <td>@item.Net</td>

                                <td><input type="button" value="Remove" onclick="Remove(this)" /></td>
                            </tr>
                        }
                    }
                </tbody>
                <tfoot>
                    <tr>
                        <td>
                            <select class="form-control" id="ddProduct" onchange="ProductChanged(this)"
                                    asp-items="@(new SelectList(ViewBag.ProductsList,"Value", "Text"))">
                            </select>
                        </td>
                        <td>
                            <input type="hidden" id="hdnProductUnitId" />
                            <select class="form-control" id="ddProductUnit" onchange="ProductUnitChanged(this)">
                            </select>
                        </td>
                        <td><input type="text" id="txtPrice" disabled /></td>
                        <td><input type="text" id="txtQuantity" /></td>
                        <td><input type="text" id="txtTotal" disabled /></td>
                        <td><input type="text" id="txtDiscount" /></td>
                        <td><input type="text" id="txtNet" disabled /></td>

                        <td><input type="button" id="btnAdd" value="Add" /></td>
                    </tr>
                </tfoot>
            </table>

            <div class="form-group">
                <input type="button" class="btn btn-primary" id="btnSave" value="Save" />

                @* <input type="submit" value="Create Invoice" class="btn btn-primary" /> *@
            </div>

        </form>
    </div>
</div>

<script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js"></script>
<script type="text/javascript" src="https://ajax.cdnjs.com/ajax/libs/json2/20110223/json2.js"></script>
<script type="text/javascript">

    var productUnits;

    $("body").on("click", "#btnAdd", function () {

        var ddProduct = $("#ddProduct");
        var ddProductUnit = $("#ddProductUnit");
        var txtPrice = $("#txtPrice");
        var txtQuantity = $("#txtQuantity");
        var txtTotal = $("#txtTotal");
        var txtDiscount = $("#txtDiscount");
        var txtNet = $("#txtNet");

        if (ddProduct.val() == "0" || ddProductUnit.val() == "0" || txtQuantity.val() == "") {
            alert("Data cannot be empty");
            return;
        }

        var tBody = $("#tblItems > TBODY")[0];

        var row = tBody.insertRow(-1);

        var cell = $(row.insertCell(-1));
        cell.html($("#ddProduct option:selected").text());

        cell = $(row.insertCell(-1));
        cell.html($("#ddProductUnit option:selected").text());

        cell = $(row.insertCell(-1));
        cell.html(txtPrice.val());

        cell = $(row.insertCell(-1));
        cell.html(txtQuantity.val());

        cell = $(row.insertCell(-1));
        cell.html(txtTotal.val());

        cell = $(row.insertCell(-1));
        cell.html(txtDiscount.val());

        cell = $(row.insertCell(-1));
        cell.html(txtNet.val());



        cell = $(row.insertCell(-1));
        var btnRemove = $("<input />");

        btnRemove.attr("type", "button");
        btnRemove.attr("onclick", "Remove(this);");
        btnRemove.val("Remove");
        cell.append(btnRemove);

        //Clear the TextBoxes.
        ddProduct.val("0");
        ddProductUnit.val("0");
        ddProductUnit.empty();
        txtPrice.val("");
        txtQuantity.val("");
        txtTotal.val("");
        txtDiscount.val("");
        txtNet.val("");
    });

    function ProductChanged(e) {
        var productId = e.value;

        if (productId != "0") {
            $.ajax({
                type: "GET",
                url: "https://localhost:7018/api/Products/GetProductUnits?ProductId=" + productId,
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (data) {
                    console.log(data);
                    var ddProductUnit = $("#ddProductUnit");
                    ddProductUnit.empty();

                    $.each(data, function (i, option) {
                        ddProductUnit.append($('<option/>').attr("value", option.id).text(option.unitName));
                    });

                    var hdnProductUnitId = $("#hdnProductUnitId");
                    hdnProductUnitId.val(ddProductUnit.val());

                    var txtPrice = $("#txtPrice");
                    txtPrice.val(data[0].price);

                    productUnits = data;
                }
            });
        }
    }

    function ProductUnitChanged(e) {

        var productUnitId = e.value;
        var hdnProductUnitId = $("#hdnProductUnitId");

        hdnProductUnitId.val(productUnitId);

        var txtPrice = $("#txtPrice");
        txtPrice.val(productUnits.find(x => x.id == productUnitId).price);
    }

    function Remove(button) {
        var row = $(button).closest("TR");
        var product = $("TD", row).eq(0).html();

        if (confirm("Do you want to delete: " + product)) {
            var table = $("#tblItems")[0];
            table.deleteRow(row[0].rowIndex);
        }
    };

    $("body").on("click", "#btnSave", function () {
        var items = new Array();
        $("#tblItems TBODY TR").each(function () {
            var row = $(this);
            var item = {};

            item.ProductUnitId = row.find("TD").eq(1).find('input[type="hidden"]').val();
            item.Price = row.find("TD").eq(2).html();
            item.Quantity = row.find("TD").eq(3).html();
            item.Discount = row.find("TD").eq(5).html();

            items.push(item);
        });

        var storeId = $("#ddStore").val();
        var date = $("#Date").val();

        var invoice = { StoreId: storeId, Date: date, Items: items };

        //Send the JSON array to Controller using AJAX.
        $.ajax({
            type: "POST",
            url: "https://localhost:7018/api/Invoices/AddInvoice",
            data: JSON.stringify(invoice),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (r) {
                alert("Invoice no " + r + " inserted.");
            }
        });
    });
</script>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
